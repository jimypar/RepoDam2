package clases;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.Collections;

public class Festival {

	private ArrayList<Conciertos> listaConciertos;
	private ArrayList<Personal> listaPersonal;
	private Connection conexion;

	public Festival() {
		this.listaConciertos = new ArrayList<Conciertos>();
		this.listaPersonal = new ArrayList<Personal>();
	}

	public ArrayList<Conciertos> getListaConciertos() {
		return listaConciertos;
	}

	public void setListaConciertos(ArrayList<Conciertos> listaConciertos) {
		this.listaConciertos = listaConciertos;
	}

	public ArrayList<Personal> getListaPersonal() {
		return listaPersonal;
	}

	public void setListaPersonal(ArrayList<Personal> listaPersonal) {
		this.listaPersonal = listaPersonal;
	}

	// alta artista
	public void altaArtista(String dni, String nombre, String estiloMusica, String cache) {
		listaPersonal.add(new Artista(dni, nombre, estiloMusica, Float.valueOf(cache)));
		Collections.sort(listaPersonal);
	}

	// alta asistente
	public void altaAsistente(String dni, String nombre, String fechaNacimiento, String nacionalidad) {
		listaPersonal.add(new Asistente(dni, nombre, fechaNacimiento, nacionalidad));
		Collections.sort(listaPersonal);
	}

	// alta concierto (llama a compruebaConcierto y compruebaArtista)
	public void altaConcierto(String codigo, String nombre, String horaInicio, String dniArtista) {
		if (compruebaConcierto(codigo) == false && compruebaArtista(dniArtista)) {
			listaConciertos.add(new Conciertos(codigo, nombre, horaInicio, devuelveArtista(dniArtista)));
			Collections.sort(listaConciertos);
		} else {
			System.out.println("Ha ocurrido un error");
		}
	}

	//registrar asistente concierto
	
	//listar artistas
	
	//listar asistentes
	
	//guardar datos en fichero
	
	//cargar datos desde fichero
	
	//conectar BBDD
	
	//guardar artistas en BBDD
	
	//cargar asistentes desde BBDD
	
	//mios (comprobaciones)
	// comprueba concierto
	public boolean compruebaConcierto(String codigo) {
		boolean existe = false;
		for (Conciertos concierto : listaConciertos) {
			if (concierto.getCodigo().equals(codigo)) {
				existe = true;
			}
		}
		return existe;
	}

	// comprueba artista
	public boolean compruebaArtista(String dni) {
		boolean existe = false;
		for (Personal personal : listaPersonal) {
			if (personal instanceof Artista) {
				if (personal.getDni().equals(dni)) {
					existe = true;
				}
			}
		}
		return existe;
	}

	// comprueba asistente
	public boolean compruebaAsistente(String dni) {
		boolean existe = false;
		for (Personal personal : listaPersonal) {
			if (personal instanceof Asistente) {
				if (personal.getDni().equals(dni)) {
					existe = true;
				}
			}
		}
		return existe;
	}

	// devuelve artista
	public Artista devuelveArtista(String dni) {
		for (Personal personal : listaPersonal) {
			if (personal instanceof Artista) {
				if (personal.getDni().equals(dni)) {
					return (Artista) personal;
				}
			}
		}
		return null;
	}

	// devuelve asistente
	public Asistente devuelveAsistente(String dni) {
		for (Personal personal : listaPersonal) {
			if (personal instanceof Asistente) {
				if (personal.getDni().equals(dni)) {
					return (Asistente) personal;
				}
			}
		}
		return null;
	}

	// devuelve conciertos
	public Conciertos devuelveConcierto(String codigo) {
		for (Conciertos concierto: listaConciertos) {
			if (concierto.getCodigo().equals(codigo)) {
				return concierto;
			}
		}
		return null;
	}

}
